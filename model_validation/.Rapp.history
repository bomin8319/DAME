plot(UN3_new$BETA[[1]][,3])
plot(UN3_new$BETA[[1]][,4])
plot(UN3_new$BETA[[1]][,5])
plot(UN3_new$BETA[[1]][,6])
summary(mcmc(UN3_new$BETA[[1]]))[[2]]
summary(mcmc(UN3_new$BETA[[10]]))[[2]]
lapply(1:32, function(x) summary(mcmc(UN3_new$BETA[[x]]))[[2]][,3])
sapply(1:32, function(x) summary(mcmc(UN3_new$BETA[[x]]))[[2]][,3])
names(UN3)
load('~/Desktop/DAME_research/UN_full3.RData')
round(summary(mcmc(UN3$kappas))[[2]][,3],4)
summary(mcmc(UN3$kappas))[[2]]
summary(mcmc(UN3$tau))[[2]]
summary(mcmc(UN3$tau))[[2]][,3]
summary(mcmc(UN3_new$BETA[[10]]))[[2]][,3]
summary(mcmc(UN3$BETA[[10]]))[[2]][,3]
sapply(1:32, function(x) summary(mcmc(UN3_new$BETA[[x]]))[[2]][,3])
sapply(1:32, function(x) summary(mcmc(UN3$BETA[[x]]))[[2]][,3])
summary(mcmc(UN3$s2))
sapply(1:32, function(x) summary(mcmc(UN3$BETA[[x]]))[[2]][,3])
sapply(1:32, function(x) summary(mcmc(UN3_new$BETA[[x]]))[[2]][,3])
load('~/Desktop/DAME_revised/UNdatafull.RData')
load('~/Desktop/UN_full3.RData')
load('~/Desktop/UN_full5.RData')
load('~/Desktop/UN_full2.RData')
load('~/Desktop/UN_full_long.RData')
UN4 = UN5
## side by side plot#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
#
n2 = 1#
for	(n in 1:N){#
	print(n)#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, , ][which(is.na(Y[d, , ]))] = 0	#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$Degree[[d]][,n2]/ rowSums(UN$Degree[[d]]), rep(hi[d], length(UN$Degree[[d]][,n2])), rep("DAME", length(UN$Degree[[d]][,n2]))))#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,], na.rm=TRUE)[n2] / sum(Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("Degree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$Degree[[d]][,n2]/ rowSums(UN2$Degree[[d]]), rep(hi[d], length(UN2$Degree[[d]][,n2])), rep("AE", length(UN2$Degree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("Degree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$Degree[[d]][,n2]/rowSums(UN3$Degree[[d]]), rep(hi[d], length(UN3$Degree[[d]][,n2])), rep("NO", length(UN3$Degree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("Degree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$Degree[[d]][,n2]/ rowSums(UN4$Degree[[d]]), rep(hi[d], length(UN4$Degree[[d]][,n2])), rep("ME", length(UN4$Degree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("Degree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("Degree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))
Time = 32#
N = 97
# not existing countries -> all missing values imputed using model (biased)#
avail1 = matrix(1, Time, N)#
colnames(avail1) = colnames(UNdatafull$Y)#
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] = 0 #North and South Korea did not joined UN voting until 1990#
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991#
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction
## side by side plot#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
#
n2 = 1#
for	(n in 1:N){#
	print(n)#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, , ][which(is.na(Y[d, , ]))] = 0	#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$Degree[[d]][,n2]/ rowSums(UN$Degree[[d]]), rep(hi[d], length(UN$Degree[[d]][,n2])), rep("DAME", length(UN$Degree[[d]][,n2]))))#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,], na.rm=TRUE)[n2] / sum(Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("Degree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$Degree[[d]][,n2]/ rowSums(UN2$Degree[[d]]), rep(hi[d], length(UN2$Degree[[d]][,n2])), rep("AE", length(UN2$Degree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("Degree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$Degree[[d]][,n2]/rowSums(UN3$Degree[[d]]), rep(hi[d], length(UN3$Degree[[d]][,n2])), rep("NO", length(UN3$Degree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("Degree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$Degree[[d]][,n2]/ rowSums(UN4$Degree[[d]]), rep(hi[d], length(UN4$Degree[[d]][,n2])), rep("ME", length(UN4$Degree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("Degree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("Degree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))
attach(UNdatafull)
#########summary of results########
## side by side plot#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
#
n2 = 1#
for	(n in 1:N){#
	print(n)#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, , ][which(is.na(Y[d, , ]))] = 0	#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$Degree[[d]][,n2]/ rowSums(UN$Degree[[d]]), rep(hi[d], length(UN$Degree[[d]][,n2])), rep("DAME", length(UN$Degree[[d]][,n2]))))#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,], na.rm=TRUE)[n2] / sum(Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("Degree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$Degree[[d]][,n2]/ rowSums(UN2$Degree[[d]]), rep(hi[d], length(UN2$Degree[[d]][,n2])), rep("AE", length(UN2$Degree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("Degree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$Degree[[d]][,n2]/rowSums(UN3$Degree[[d]]), rep(hi[d], length(UN3$Degree[[d]][,n2])), rep("NO", length(UN3$Degree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("Degree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$Degree[[d]][,n2]/ rowSums(UN4$Degree[[d]]), rep(hi[d], length(UN4$Degree[[d]][,n2])), rep("ME", length(UN4$Degree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("Degree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("Degree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))
######degree statistics#
setwd('/Users/bomin8319/Desktop/model_validation_new')#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$Degree = as.numeric(as.character(hellonew[[n]]$Degree))#
	mean[[n]]$Degree = as.numeric(as.character(mean[[n]]$Degree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = Degree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, ".png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}#
#
#seconddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[Time]]))#
#
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$secondDegree[[d]][,n2]/rowSums(UN$secondDegree[[d]]), rep(hi[d], length(UN$secondDegree[[d]][,n2])), rep("DAME", length(UN$secondDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, , ][which(is.na(Y[d, , ]))] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2]/ sum(Y[d,,] %*% Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("SecondDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$secondDegree[[d]][,n2]/rowSums(UN2$secondDegree[[d]]), rep(hi[d], length(UN2$secondDegree[[d]][,n2])), rep("AE", length(UN2$secondDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("SecondDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$secondDegree[[d]][,n2]/rowSums(UN3$secondDegree[[d]]), rep(hi[d], length(UN3$secondDegree[[d]][,n2])), rep("NO", length(UN3$secondDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("SecondDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$secondDegree[[d]][,n2]/rowSums(UN4$secondDegree[[d]]), rep(hi[d], length(UN4$secondDegree[[d]][,n2])), rep("ME", length(UN4$secondDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("SecondDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
#
hellonew[[n]] = as.data.frame(rbind(hello[[n]],hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("SecondDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$SecondDegree = as.numeric(as.character(hellonew[[n]]$SecondDegree))#
	mean[[n]]$SecondDegree = as.numeric(as.character(mean[[n]]$SecondDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = SecondDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "second.png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}#
#thirddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[Time]]))#
#
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$thirdDegree[[d]][,n2]/rowSums(UN$thirdDegree[[d]]), rep(hi[d], length(UN$thirdDegree[[d]][,n2])), rep("DAME", length(UN$thirdDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, , ][which(is.na(Y[d, , ]))] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2]/sum(Y[d,,] %*% Y[d,,] %*% Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("ThirdDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$thirdDegree[[d]][,n2]/rowSums(UN2$thirdDegree[[d]]), rep(hi[d], length(UN2$thirdDegree[[d]][,n2])), rep("AE", length(UN2$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("ThirdDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$thirdDegree[[d]][,n2]/rowSums(UN3$thirdDegree[[d]]), rep(hi[d], length(UN3$thirdDegree[[d]][,n2])), rep("NO", length(UN3$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("ThirdDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$thirdDegree[[d]][,n2]/rowSums(UN4$thirdDegree[[d]]), rep(hi[d], length(UN4$thirdDegree[[d]][,n2])), rep("ME", length(UN4$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("ThirdDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("ThirdDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$ThirdDegree = as.numeric(as.character(hellonew[[n]]$ThirdDegree))#
	mean[[n]]$ThirdDegree = as.numeric(as.character(mean[[n]]$ThirdDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = ThirdDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) +  geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "third.png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}
library(ggplot2)
######degree statistics#
setwd('/Users/bomin8319/Desktop/model_validation_new')#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$Degree = as.numeric(as.character(hellonew[[n]]$Degree))#
	mean[[n]]$Degree = as.numeric(as.character(mean[[n]]$Degree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = Degree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, ".png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}#
#
#seconddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[Time]]))#
#
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$secondDegree[[d]][,n2]/rowSums(UN$secondDegree[[d]]), rep(hi[d], length(UN$secondDegree[[d]][,n2])), rep("DAME", length(UN$secondDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, , ][which(is.na(Y[d, , ]))] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2]/ sum(Y[d,,] %*% Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("SecondDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$secondDegree[[d]][,n2]/rowSums(UN2$secondDegree[[d]]), rep(hi[d], length(UN2$secondDegree[[d]][,n2])), rep("AE", length(UN2$secondDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("SecondDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$secondDegree[[d]][,n2]/rowSums(UN3$secondDegree[[d]]), rep(hi[d], length(UN3$secondDegree[[d]][,n2])), rep("NO", length(UN3$secondDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("SecondDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$secondDegree[[d]][,n2]/rowSums(UN4$secondDegree[[d]]), rep(hi[d], length(UN4$secondDegree[[d]][,n2])), rep("ME", length(UN4$secondDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("SecondDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
#
hellonew[[n]] = as.data.frame(rbind(hello[[n]],hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("SecondDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$SecondDegree = as.numeric(as.character(hellonew[[n]]$SecondDegree))#
	mean[[n]]$SecondDegree = as.numeric(as.character(mean[[n]]$SecondDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = SecondDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "second.png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}#
#thirddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[Time]]))#
#
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$thirdDegree[[d]][,n2]/rowSums(UN$thirdDegree[[d]]), rep(hi[d], length(UN$thirdDegree[[d]][,n2])), rep("DAME", length(UN$thirdDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, , ][which(is.na(Y[d, , ]))] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2]/sum(Y[d,,] %*% Y[d,,] %*% Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("ThirdDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$thirdDegree[[d]][,n2]/rowSums(UN2$thirdDegree[[d]]), rep(hi[d], length(UN2$thirdDegree[[d]][,n2])), rep("AE", length(UN2$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("ThirdDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$thirdDegree[[d]][,n2]/rowSums(UN3$thirdDegree[[d]]), rep(hi[d], length(UN3$thirdDegree[[d]][,n2])), rep("NO", length(UN3$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("ThirdDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$thirdDegree[[d]][,n2]/rowSums(UN4$thirdDegree[[d]]), rep(hi[d], length(UN4$thirdDegree[[d]][,n2])), rep("ME", length(UN4$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("ThirdDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("ThirdDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$ThirdDegree = as.numeric(as.character(hellonew[[n]]$ThirdDegree))#
	mean[[n]]$ThirdDegree = as.numeric(as.character(mean[[n]]$ThirdDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = ThirdDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) +  geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "third.png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}
Degrees = vapply(1:Time, function(tp) {rowSums(Y[tp,,], na.rm = TRUE)}, rep(0, N))#
corr = vapply(1:31, function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)#
#Degrees_nofixed = vapply(1:Time, function(tp) {rowSums(E[[tp]], na.rm = TRUE)}, rep(0, N))#
#corr_nofixed = vapply(1:31, function(l) {cor(Degrees_nofixed[1:(N*(Time - l))], Degrees_nofixed[(1 + N*l):(N*Time)], use = "complete")}, 0)
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
number_ticks <- function(n) {function(limits) pretty(limits, n)}
######degree statistics#
setwd('/Users/bomin8319/Desktop/model_validation_new')#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$Degree = as.numeric(as.character(hellonew[[n]]$Degree))#
	mean[[n]]$Degree = as.numeric(as.character(mean[[n]]$Degree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = Degree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, ".png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}
hellownew
library(FastGP)#
library(mvtnorm)#
library(fields)#
library(reshape)#
library(MCMCpack)#
library(expm)#
library(igraph)#
library(coda)#
library(ggplot2)#
library(LaplacesDemon)#
library(truncnorm)#
library(gridExtra)#
library(Rfast)
#########summary of results########
## side by side plot#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
#
n2 = 1#
for	(n in 1:N){#
	print(n)#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, , ][which(is.na(Y[d, , ]))] = 0	#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$Degree[[d]][,n2]/ rowSums(UN$Degree[[d]]), rep(hi[d], length(UN$Degree[[d]][,n2])), rep("DAME", length(UN$Degree[[d]][,n2]))))#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,], na.rm=TRUE)[n2] / sum(Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("Degree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$Degree[[d]][,n2]/ rowSums(UN2$Degree[[d]]), rep(hi[d], length(UN2$Degree[[d]][,n2])), rep("AE", length(UN2$Degree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("Degree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$Degree[[d]][,n2]/rowSums(UN3$Degree[[d]]), rep(hi[d], length(UN3$Degree[[d]][,n2])), rep("NO", length(UN3$Degree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("Degree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$Degree[[d]][,n2]/ rowSums(UN4$Degree[[d]]), rep(hi[d], length(UN4$Degree[[d]][,n2])), rep("ME", length(UN4$Degree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("Degree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("Degree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
######degree statistics#
setwd('/Users/bomin8319/Desktop/model_validation_new')#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$Degree = as.numeric(as.character(hellonew[[n]]$Degree))#
	mean[[n]]$Degree = as.numeric(as.character(mean[[n]]$Degree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = Degree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, ".png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}#
#
#seconddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[Time]]))#
#
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$secondDegree[[d]][,n2]/rowSums(UN$secondDegree[[d]]), rep(hi[d], length(UN$secondDegree[[d]][,n2])), rep("DAME", length(UN$secondDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, , ][which(is.na(Y[d, , ]))] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2]/ sum(Y[d,,] %*% Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("SecondDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$secondDegree[[d]][,n2]/rowSums(UN2$secondDegree[[d]]), rep(hi[d], length(UN2$secondDegree[[d]][,n2])), rep("AE", length(UN2$secondDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("SecondDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$secondDegree[[d]][,n2]/rowSums(UN3$secondDegree[[d]]), rep(hi[d], length(UN3$secondDegree[[d]][,n2])), rep("NO", length(UN3$secondDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("SecondDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$secondDegree[[d]][,n2]/rowSums(UN4$secondDegree[[d]]), rep(hi[d], length(UN4$secondDegree[[d]][,n2])), rep("ME", length(UN4$secondDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("SecondDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
#
hellonew[[n]] = as.data.frame(rbind(hello[[n]],hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("SecondDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$SecondDegree = as.numeric(as.character(hellonew[[n]]$SecondDegree))#
	mean[[n]]$SecondDegree = as.numeric(as.character(mean[[n]]$SecondDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = SecondDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "second.png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}#
#thirddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[Time]]))#
#
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$thirdDegree[[d]][,n2]/rowSums(UN$thirdDegree[[d]]), rep(hi[d], length(UN$thirdDegree[[d]][,n2])), rep("DAME", length(UN$thirdDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, , ][which(is.na(Y[d, , ]))] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2]/sum(Y[d,,] %*% Y[d,,] %*% Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("ThirdDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$thirdDegree[[d]][,n2]/rowSums(UN2$thirdDegree[[d]]), rep(hi[d], length(UN2$thirdDegree[[d]][,n2])), rep("AE", length(UN2$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("ThirdDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$thirdDegree[[d]][,n2]/rowSums(UN3$thirdDegree[[d]]), rep(hi[d], length(UN3$thirdDegree[[d]][,n2])), rep("NO", length(UN3$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("ThirdDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$thirdDegree[[d]][,n2]/rowSums(UN4$thirdDegree[[d]]), rep(hi[d], length(UN4$thirdDegree[[d]][,n2])), rep("ME", length(UN4$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("ThirdDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("ThirdDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$ThirdDegree = as.numeric(as.character(hellonew[[n]]$ThirdDegree))#
	mean[[n]]$ThirdDegree = as.numeric(as.character(mean[[n]]$ThirdDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = ThirdDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) +  geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "third.png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}
names(UN4)
plot(UN$s2, type = 'l')
plot(UN4$s2, type = 'l')
plot(UN4$tau[,1],type= 'l')
plot(UN4$tau[,2],type= 'l')
plot(UN4$tau[,3],type= 'l')
plot(UN4$tau[,4],type= 'l')
plot(UN4$BETA[[1]][,4],type= 'l')
plot(UN4$BETA[[1]][,1],type= 'l')
plot(UN$BETA[[1]][,1],type= 'l')
plot(UN4$BETA[[1]][,1],type= 'l')
plot(UN4$BETA[[2]][,1],type= 'l')
plot(UN4$BETA[[3]][,1],type= 'l')
plot(UN4$BETA[[4]][,1],type= 'l')
plot(UN4$BETA[[5]][,1],type= 'l')
plot(UN4$BETA[[6]][,1],type= 'l')
plot(UN4$BETA[[7]][,1],type= 'l')
plot(UN4$BETA[[8]][,1],type= 'l')
plot(UN4$BETA[[9]][,1],type= 'l')
plot(UN4$BETA[[10]][,1],type= 'l')
plot(UN4$BETA[[11]][,1],type= 'l')
plot(UN4$BETA[[12]][,1],type= 'l')
plot(UN4$BETA[[13]][,1],type= 'l')
plot(UN4$BETA[[14]][,1],type= 'l')
head(UN4$BETA[[14]])
plot(UN4$BETA[[15]][,1],type= 'l')
plot(UN4$BETA[[16]][,1],type= 'l')
plot(UN4$BETA[[17]][,1],type= 'l')
UN4$U
plot(UN4$BETA[[16]][,1],type= 'l')
plot(UN4$BETA[[17]][,1],type= 'l')
plot(UN4$BETA[[18]][,1],type= 'l')
plot(UN4$BETA[[19]][,1],type= 'l')
plot(UN4$BETA[[20]][,1],type= 'l')
plot(UN4$BETA[[21]][,1],type= 'l')
plot(UN4$BETA[[22]][,1],type= 'l')
plot(UN$BETA[[22]][,1],type= 'l')
names(UN)
plot(UN$tau[,9])
plot(UN$tau[,9], type = 'l')
plot(UN$tau[,8], type = 'l')
plot(UN$tau[,7], type = 'l')
plot(UN$tau[,9], type = 'l')
plot(UN$tau[,8], type = 'l')
DAME_UU_fixed_revised
source('~/Desktop/DAME.R', chdir = TRUE)
source('~/Desktop/DAME.R', chdir = TRUE)
DAME_UU_fixed_revised
colMeans(UN4$tau)
plot(UN4$tau[,1], type = 'l')
plot(UN4$tau[,2], type = 'l')
plot(UN4$tau[,6], type = 'l')
plot(UN4$tau[,7], type = 'l')
plot(UN4$tau[,8], type = 'l')
plot(UN4$tau[,9], type = 'l')
colMeans(UN$kappas)
UN5 = DAME_UU_fixed_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("multiplicative"), R = 2, avail = avail1, burn = 200, nscan = 500, odens = 1, kappas = rep(30, 6+1+2))
source('~/Desktop/DAME.R', chdir = TRUE)
UN5 = DAME_UU_fixed_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("multiplicative"), R = 2, avail = avail1, burn = 200, nscan = 500, odens = 1, kappas = rep(30, 6+1+2))
names(UN5)
plot(UN5$s2, type = 'l')
plot(UN$s2, type = 'l')
plot(UN5$s2, type = 'l')
plot(UN5$BETA[[1]][,1], type = 'l')
plot(UN5$BETA[[12]][,1], type = 'l')
plot(UN5$tau[,1], type = 'l')
rm(list=ls())
load('~/Desktop/DAME_revised/UNdatafull.RData')
attach(UNdatafull)#
library(FastGP)#
library(mvtnorm)#
library(fields)#
library(reshape)#
library(MCMCpack)#
library(expm)#
library(igraph)#
library(coda)#
library(ggplot2)#
library(LaplacesDemon)#
library(truncnorm)#
library(gridExtra)#
library(Rfast)#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
number_ticks <- function(n) {function(limits) pretty(limits, n)}#
#
# 97 country version#
Time = 32#
N = 97#
#
# not existing countries -> all missing values imputed using model (biased)#
avail1 = matrix(1, Time, N)#
colnames(avail1) = colnames(UNdatafull$Y)#
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] = 0 #North and South Korea did not joined UN voting until 1990#
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991#
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction#
#
Degrees = vapply(1:Time, function(tp) {rowSums(Y[tp,,], na.rm = TRUE)}, rep(0, N))#
corr = vapply(1:31, function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)
source('~/Desktop/DAME.R', chdir = TRUE)
Y = Y[1:Time,,]*100
dim(Y)
Y[1:5,1:5,1]
X = X[1:Time,,,1:6]
RE = c("multiplicative")
R = 2
avail = avail1
burn= 20
nscan = 50
kappas = rep(10, 6+1+2)
odens = 1
dist = "Exponential"
gammapriors = c(2, 1)
kappas
Time = dim(Y)[1]#
    N = dim(Y)[2]#
    P = dim(X)[4]#
    a = gammapriors[1]; b = gammapriors[2]#
    # construct covariance matrix for each variable#
    dist_ij = c()#
    if (dist == "Exponential"){#
        for (i in 1:Time) {#
            for (j in 1:Time) {#
                dist_ij = c(dist_ij, abs(i-j))#
            }#
        }#
    } else {#
        for (i in 1:Time) {#
            for (j in 1:Time) {#
                dist_ij = c(dist_ij, (i-j)^2)#
            }#
        }#
    }#
    dist_ij = matrix(dist_ij, nrow = Time, ncol = Time)#
    cinv = lapply(1:(P+1+R), function(k) {#
        rcppeigen_invert_matrix(Exponential(dist_ij, kappas[k]))#
    })
N
P
cinv[[9]]
beta = matrix(0, Time, P)#
    U = array(0, dim = c(Time, N, R))#
    d = matrix(1, Time, R)#
    theta = matrix(0, Time, N)#
    BETAPS = lapply(1:Time, function(tp) {#
        matrix(0, nrow = nscan / odens, ncol = P)#
    })#
    UDUPS = lapply(1:Time, function(tp) {#
        matrix(0, N, N)#
    })#
    YPSsum = lapply(1:Time, function(tp) {#
        matrix(0, N, N)#
    })#
    s2PS = matrix(0, nrow = nscan / odens, ncol = 1)#
    tauPS = matrix(0, nrow = nscan / odens, ncol = P + 1 + R)#
    thetaPS = lapply(1:Time, function(tp) {#
        matrix(0, nrow = nscan / odens, ncol = N)#
    })#
    UPS = array(0, dim = c(Time, N, R))#
    Degreestats = lapply(1:Time, function(tp) {#
        matrix(0, nrow = 0, ncol = N)#
    })#
    secondDegreestats = lapply(1:Time, function(tp) {#
        matrix(0, nrow = 0, ncol = N)#
    })#
    thirdDegreestats = lapply(1:Time, function(tp) {#
        matrix(0, nrow = 0, ncol = N)#
    })#
    corrstats = matrix(0, nrow = nscan / odens, ncol = Time - 1)
years = sample(1:Time, 1)#
    # to begin with, use 0 for NA's except meaningful ones#
    colnames(avail) = dimnames(Y)[[2]]#
    meaningful_NA_rows = lapply(1:Time, function(tp) {#
        which(avail[tp,]==0)#
    })#
    meaningful_NA = lapply(1:Time, function(tp) {#
        pre = matrix(0, N, N)#
        pre[meaningful_NA_rows[[tp]],] = NA#
        pre[,meaningful_NA_rows[[tp]]] = NA#
        which(is.na(pre)==TRUE)#
    })#
    meaningful_NA_years = which(vapply(meaningful_NA_rows, function(i) {length(i)}, c(1)) > 0)#
    # to begin with, use 0 for NA's#
    for (p in 1:P) {#
        X[, , , p][which(is.na(X[, , , p]))] = 0#
        for (tp in 1:Time) {#
            X[tp, , , p][meaningful_NA[[tp]]] = NA#
            Y[tp, , ][meaningful_NA[[tp]]] = NA#
        }#
    }#
    XB = lapply(1:Time, function(tp) {#
        Reduce('+', lapply(1:P, function(p){#
            X[tp, , , p] * beta[tp, p]#
        }))#
    })#
    na.positions = lapply(1:Time, function(tp) {#
        which(is.na(Y[tp, , ]))#
    })
for (tp in 1:Time) {#
        mu = mean(Y[tp, , ], na.rm = TRUE)#
        row = rowMeans(Y[tp, , ] - mu, na.rm = TRUE)#
        row[is.na(row)] = 0#
        YA = mu + outer(row, row, "+")#
        Y[tp, , ][na.positions[[tp]]] = YA[na.positions[[tp]]]#
        diag(Y[tp, , ]) = 0#
        beta[tp, 1] = mu#
        if ("additive" %in% RE) {#
      	theta[tp, ] = row#
      	}#
      	if ("multiplicative" %in% RE) {#
      	eigenError = eigen(Y[tp, , ] - YA)#
      	eR = which(rank(-abs(eigenError$val), ties.method = "first") <= R)#
      	signs = eigenError$val[eR]#
      	d[tp, ] = ifelse(signs > 0, 1, -1)#
    	}#
        Y[tp, , ][meaningful_NA[[tp]]] = NA#
    }#
    UDU = UDUPS
theta
mu
beta
uppertri = upper.tri(diag(N))#
    tau_p = rep(1, P)#
  	tau_i = 1#
  	tau_u = rep(N, R)
UDU
a
b
rs2_fc2(XB, theta, UDU, Y, a, b)
rtaup_fc(beta, cinv[1:P], a, b)
RE
s2 = rs2_fc2(XB, theta, UDU, Y, a, b)#
        tau_p = rtaup_fc(beta, cinv[1:P], a, b)#
        beta = rbeta_fc(X, beta, theta, UDU, Y, cinv[1:P], tau_p, s2)#
        XB = lapply(1:Time, function(tp) {#
            Reduce('+', lapply(1:P, function(p){#
                X[tp, , , p] * beta[tp, p]#
            }))#
        })
beta
rtauu_fc(U, cinv[(P+2):(P+1+R)], a, b)
U
ru_fc_NA_revised(XB, theta, U, d, Y, cinv[(P+2):(P+1+R)], tau_u, s2, meaningful_NA_rows)
d
ifelse(signs > 0, 1, -1)
d[tp, ] = 1
d
d = 1
d
for (tp in 1:Time) {#
        mu = mean(Y[tp, , ], na.rm = TRUE)#
        row = rowMeans(Y[tp, , ] - mu, na.rm = TRUE)#
        row[is.na(row)] = 0#
        YA = mu + outer(row, row, "+")#
        Y[tp, , ][na.positions[[tp]]] = YA[na.positions[[tp]]]#
        diag(Y[tp, , ]) = 0#
        beta[tp, 1] = mu#
        if ("additive" %in% RE) {#
      	theta[tp, ] = row#
      	}#
      	if ("multiplicative" %in% RE) {#
      	eigenError = eigen(Y[tp, , ] - YA)#
      	eR = which(rank(-abs(eigenError$val), ties.method = "first") <= R)#
      	signs = eigenError$val[eR]#
      	d[tp, ] = 1#
    	}#
        Y[tp, , ][meaningful_NA[[tp]]] = NA#
    }
for (tp in 1:Time) {#
        mu = mean(Y[tp, , ], na.rm = TRUE)#
        row = rowMeans(Y[tp, , ] - mu, na.rm = TRUE)#
        row[is.na(row)] = 0#
        YA = mu + outer(row, row, "+")#
        Y[tp, , ][na.positions[[tp]]] = YA[na.positions[[tp]]]#
        diag(Y[tp, , ]) = 0#
        beta[tp, 1] = mu#
        if ("additive" %in% RE) {#
      	theta[tp, ] = row#
      	}#
      	if ("multiplicative" %in% RE) {#
      	eigenError = eigen(Y[tp, , ] - YA)#
      	eR = which(rank(-abs(eigenError$val), ties.method = "first") <= R)#
      	signs = eigenError$val[eR]#
      	d[tp, ] = rep(1, R)#
    	}#
        Y[tp, , ][meaningful_NA[[tp]]] = NA#
    }
source('~/Desktop/DAME.R', chdir = TRUE)
DAME_UU_fixed_revised
source('~/Desktop/DAME.R', chdir = TRUE)
DAME_UU_fixed_revise
DAME_UU_fixed_revised
meaningful_NA_years
meaningful_NA_rows
source('~/Desktop/DAME.R', chdir = TRUE)
UN5 = DAME_UU_fixed_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("multiplicative"), R = 2, avail = avail1, burn = 200, nscan = 500, odens = 5, kappas = rep(10, 6+1+2))
names(UN5)
plot(UN$s2, type = 'l')
plot(UN5$s2, type = 'l')
Un5$s2
UN5$s2
names(UN5)
plot(UN5$tau[,1], type = 'l')
plot(UN5$BETA[[1]][,1], type = 'l')
plot(UN5$BETA[[12]][,1], type = 'l')
plot(UN5$BETA[[16]][,1], type = 'l')
plot(UN5$BETA[[10]][,1], type = 'l')
source('~/Desktop/DAME.R', chdir = TRUE)
DAME_UU_fixed_revised
UN5 = DAME_UU_fixed_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("multiplicative"), R = 2, avail = avail1, burn = 400, nscan = 1000, odens = 1, kappas = rep(10, 6+1+2))
source('~/Desktop/DAME.R', chdir = TRUE)
UN5 = DAME_UU_fixed_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("multiplicative"), R = 2, avail = avail1, burn = 400, nscan = 1000, odens = 1, kappas = rep(10, 6+1+2))
names(UN5)
plot(UN5$s2, type  = 'l')
plot(UN5$tau[,1], type  = 'l')
plot(UN5$tau[,2], type  = 'l')
UN5$UDU
load('~/Desktop/UN_full_long.RData')
UN$UDU
summary(c(UN$UDU))
summary(unlist(UN$UDU))
summary(unlist(UN5$UDU))
summary(UN$s2)
summary(UN5$s2)
plot(UN5$BETA[[1]][,1])
plot(UN5$BETA[[12]][,1])
plot(UN5$BETA[[16]][,1])
Time = dim(Y)[1]#
    N = dim(Y)[2]#
    P = dim(X)[4]#
    a = gammapriors[1]; b = gammapriors[2]#
    # construct covariance matrix for each variable#
    dist_ij = c()#
    if (dist == "Exponential"){#
        for (i in 1:Time) {#
            for (j in 1:Time) {#
                dist_ij = c(dist_ij, abs(i-j))#
            }#
        }#
    } else {#
        for (i in 1:Time) {#
            for (j in 1:Time) {#
                dist_ij = c(dist_ij, (i-j)^2)#
            }#
        }#
    }#
    dist_ij = matrix(dist_ij, nrow = Time, ncol = Time)#
    cinv = lapply(1:(P+1+R), function(k) {#
        rcppeigen_invert_matrix(Exponential(dist_ij, kappas[k]))#
    })#
    # select initial values#
    beta = matrix(0, Time, P)#
    U = array(0, dim = c(Time, N, R))#
    d = matrix(1, Time, R)#
    theta = matrix(0, Time, N)#
    BETAPS = lapply(1:Time, function(tp) {#
        matrix(0, nrow = nscan / odens, ncol = P)#
    })#
    UDUPS = lapply(1:Time, function(tp) {#
        matrix(0, N, N)#
    })#
    YPSsum = lapply(1:Time, function(tp) {#
        matrix(0, N, N)#
    })#
    s2PS = matrix(0, nrow = nscan / odens, ncol = 1)#
    tauPS = matrix(0, nrow = nscan / odens, ncol = P + 1 + R)#
    thetaPS = lapply(1:Time, function(tp) {#
        matrix(0, nrow = nscan / odens, ncol = N)#
    })#
    UPS = array(0, dim = c(Time, N, R))#
    Degreestats = lapply(1:Time, function(tp) {#
        matrix(0, nrow = 0, ncol = N)#
    })#
    secondDegreestats = lapply(1:Time, function(tp) {#
        matrix(0, nrow = 0, ncol = N)#
    })#
    thirdDegreestats = lapply(1:Time, function(tp) {#
        matrix(0, nrow = 0, ncol = N)#
    })#
    corrstats = matrix(0, nrow = nscan / odens, ncol = Time - 1)#
    years = sample(1:Time, 1)#
    # to begin with, use 0 for NA's except meaningful ones#
    colnames(avail) = dimnames(Y)[[2]]#
    meaningful_NA_rows = lapply(1:Time, function(tp) {#
        which(avail[tp,]==0)#
    })#
    meaningful_NA = lapply(1:Time, function(tp) {#
        pre = matrix(0, N, N)#
        pre[meaningful_NA_rows[[tp]],] = NA#
        pre[,meaningful_NA_rows[[tp]]] = NA#
        which(is.na(pre)==TRUE)#
    })#
    meaningful_NA_years = which(vapply(meaningful_NA_rows, function(i) {length(i)}, c(1)) > 0)#
    # to begin with, use 0 for NA's#
    for (p in 1:P) {#
        X[, , , p][which(is.na(X[, , , p]))] = 0#
        for (tp in 1:Time) {#
            X[tp, , , p][meaningful_NA[[tp]]] = NA#
            Y[tp, , ][meaningful_NA[[tp]]] = NA#
        }#
    }#
    XB = lapply(1:Time, function(tp) {#
        Reduce('+', lapply(1:P, function(p){#
            X[tp, , , p] * beta[tp, p]#
        }))#
    })#
    na.positions = lapply(1:Time, function(tp) {#
        which(is.na(Y[tp, , ]))#
    })#
    for (tp in 1:Time) {#
        mu = mean(Y[tp, , ], na.rm = TRUE)#
        row = rowMeans(Y[tp, , ] - mu, na.rm = TRUE)#
        row[is.na(row)] = 0#
        YA = mu + outer(row, row, "+")#
        Y[tp, , ][na.positions[[tp]]] = YA[na.positions[[tp]]]#
        diag(Y[tp, , ]) = 0#
        beta[tp, 1] = mu#
        if ("additive" %in% RE) {#
      	theta[tp, ] = row#
      	}#
        Y[tp, , ][meaningful_NA[[tp]]] = NA#
    }#
    UDU = UDUPS#
    uppertri = upper.tri(diag(N))#
    tau_p = rep(1, P)#
  	tau_i = 1#
  	tau_u = rep(N, R)
beta
rs2_fc2(XB, theta, UDU, Y, a, b)
Y[1:5, 1:5, 1]
for (tp in 1:Time) {#
        mu = mean(Y[tp, , ], na.rm = TRUE)#
        row = rowMeans(Y[tp, , ] - mu, na.rm = TRUE)#
        row[is.na(row)] = 0#
        YA = mu + outer(row, row, "+")#
        Y[tp, , ][na.positions[[tp]]] = YA[na.positions[[tp]]]#
        diag(Y[tp, , ]) = 0#
        beta[tp, 1] = mu#
        if ("additive" %in% RE) {#
      	theta[tp, ] = row#
      	}#
        Y[tp, , ][meaningful_NA[[tp]]] = NA#
    }#
    XB = lapply(1:Time, function(tp) {#
        Reduce('+', lapply(1:P, function(p){#
            X[tp, , , p] * beta[tp, p]#
        }))#
    })
rs2_fc2(XB, theta, UDU, Y, a, b)
beta
summary(unlist(UDU))
summary(c(theta))
summary(unlist(XB))
s2 = rs2_fc2(XB, theta, UDU, Y, a, b)#
        tau_p = rtaup_fc(beta, cinv[1:P], a, b)#
        beta = rbeta_fc(X, beta, theta, UDU, Y, cinv[1:P], tau_p, s2)#
        XB = lapply(1:Time, function(tp) {#
            Reduce('+', lapply(1:P, function(p){#
                X[tp, , , p] * beta[tp, p]#
            }))#
        })
source('~/Desktop/DAME.R', chdir = TRUE)
UN5 = DAME_UU_fixed_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("multiplicative"), R = 2, avail = avail1, burn = 2000, nscan = 5000, odens = 10, kappas = rep(10, 6+1+2))
UN6 = DAME_MH_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("multiplicative"), R = 2, avail = avail1, burn = 2000, nscan = 5000, odens = 10, kappas = rep(10, 6+1+2))
UN5 = DAME_UU_fixed_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("multiplicative"), R = 2, avail = avail1, burn = 20000, nscan = 50000, odens = 50, kappas = rep(10, 6+1+2))#
UN6 = DAME_MH_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("multiplicative"), R = 2, avail = avail1, burn = 2000, nscan = 5000, odens = 10)
UN5 = DAME_UU_fixed_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("multiplicative"), R = 2, avail = avail1, burn = 2000, nscan = 5000, odens = 10, kappas = rep(10, 6+1+2))#
UN6 = DAME_MH_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("multiplicative"), R = 2, avail = avail1, burn = 2000, nscan = 5000, odens = 10)
names(UN5)
plot(UN5$s2, type = ;k)
plot(UN5$s2, type = 'l')
plot(UN6$s2, type = 'l')
plot(UN5$tau[,1], type = 'l')
plot(UN6$tau[,1], type = 'l')
plot(UN6$BETA[[1]][,1], type = 'l')
plot(UN6$BETA[[2]][,1], type = 'l')
plot(UN6$BETA[[3]][,1], type = 'l')
plot(UN6$BETA[[4]][,1], type = 'l')
plot(UN6$BETA[[5]][,1], type = 'l')
plot(UN6$BETA[[6]][,1], type = 'l')
plot(UN6$BETA[[7]][,1], type = 'l')
plot(UN6$BETA[[8]][,1], type = 'l')
plot(UN6$BETA[[9]][,1], type = 'l')
UN6$D
plot(UN6$kappas[,1], type = 'l')
plot(UN6$kappas[,2], type = 'l')
plot(UN6$kappas[,3], type = 'l')
plot(UN6$kappas[,4], type = 'l')
plot(UN6$kappas[,5], type = 'l')
plot(UN6$kappas[,6], type = 'l')
plot(UN6$kappas[,7], type = 'l')
plot(UN6$kappas[,8], type = 'l')
plot(UN6$kappas[,9], type = 'l')
plot(UN6$kappas[,10], type = 'l')
UN6 = DAME_MH_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("additive","multiplicative"), R = 2, avail = avail1, burn = 2000, nscan = 5000, odens = 10)
names(UN6)
head(UN6$tau)
UN7 = DAME_MH_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("additive","multiplicative"), R = 2, avail = avail1, burn = 2000, nscan = 5000, odens = 10)
UN7 = DAME_MH_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("additive","multiplicative"), R = 2, avail = avail1, burn = 400, nscan = 1000, odens = 2)
summary(UN7$s2, type = 'l')
plot(UN7$s2, type = 'l')
rm(list=ls())
load('~/Desktop/DAME_revised/UNdatafull.RData')
attach(UNdatafull)#
library(FastGP)#
library(mvtnorm)#
library(fields)#
library(reshape)#
library(MCMCpack)#
library(expm)#
library(igraph)#
library(coda)#
library(ggplot2)#
library(LaplacesDemon)#
library(truncnorm)#
library(gridExtra)#
library(Rfast)#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
number_ticks <- function(n) {function(limits) pretty(limits, n)}#
#
# 97 country version#
Time = 32#
N = 97#
#
# not existing countries -> all missing values imputed using model (biased)#
avail1 = matrix(1, Time, N)#
colnames(avail1) = colnames(UNdatafull$Y)#
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] = 0 #North and South Korea did not joined UN voting until 1990#
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991#
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction#
#
Degrees = vapply(1:Time, function(tp) {rowSums(Y[tp,,], na.rm = TRUE)}, rep(0, N))#
corr = vapply(1:31, function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)#
#Degrees_nofixed = vapply(1:Time, function(tp) {rowSums(E[[tp]], na.rm = TRUE)}, rep(0, N))#
#corr_nofixed = vapply(1:31, function(l) {cor(Degrees_nofixed[1:(N*(Time - l))], Degrees_nofixed[(1 + N*l):(N*Time)], use = "complete")}, 0)
source('~/Desktop/DAME.R', chdir = TRUE)
UN7 = DAME_MH_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("additive","multiplicative"), R = 2, avail = avail1, burn = 400, nscan = 1000, odens = 2)
