#pp = ggplot(datacollapse2, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp
datacollapse = data.frame(Proportion = datacollapse[,1]/Time, secondDegree = as.factor(as.numeric(as.character(datamat3$secondDegree))*10000), Model = datamat3$Model)
observedcollapse = data.frame(Proportion = observedcollapse[,1]/Time, secondDegree = observed$secondDegree, Model = observed$Model)
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
datacollapse$secondDegree =as.factor(paste0(substr(datacollapse$secondDegree, 1, 3), ""))
observedcollapse$secondDegree =as.factor(paste0(substr(observedcollapse$secondDegree, 1, 3), ""))
pp = ggplot(datacollapse, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
#pp = ggplot(datacollapse2, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp
table(observedcollapse$secondDegree)
datacollapse = data.frame(Proportion = datacollapse[,1]/Time, secondDegree = as.factor(as.numeric(as.character(datamat3$secondDegree))*10000), Model = datamat3$Model)
observedcollapse = data.frame(Proportion = observedcollapse[,1]/Time, secondDegree = observed$secondDegree, Model = observed$Model)
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
table(observedcollapse$secondDegree)
options(scipen = 999)
datacollapse = data.frame(Proportion = datacollapse[,1]/Time, secondDegree = as.factor(as.numeric(as.character(datamat3$secondDegree))*10000), Model = datamat3$Model)
observedcollapse = data.frame(Proportion = observedcollapse[,1]/Time, secondDegree = observed$secondDegree, Model = observed$Model)
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
table(observedcollapse$secondDegree)
options("scipen"=100, "digits"=4)
datacollapse = data.frame(Proportion = datacollapse[,1]/Time, secondDegree = as.factor(as.numeric(as.character(datamat3$secondDegree))*10000), Model = datamat3$Model)
observedcollapse = data.frame(Proportion = observedcollapse[,1]/Time, secondDegree = observed$secondDegree, Model = observed$Model)
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
#datacollapse$secondDegree[which(datacollapse$secondDegree=="5e+05")] = as.character(500000)
datacollapse$secondDegree =as.factor(paste0(substr(datacollapse$secondDegree, 1, 3), ""))
observedcollapse$secondDegree =as.factor(paste0(substr(observedcollapse$secondDegree, 1, 3), ""))
pp = ggplot(datacollapse, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
#pp = ggplot(datacollapse2, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp
#########summary of results#######
load("/Users/bomin8319/Desktop/DAME_revised/UNdatafull.RData")
attach(UNdatafull)
library(FastGP)
library(mvtnorm)
library(fields)
library(reshape)
library(MCMCpack)
library(expm)
library(igraph)
library(coda)
library(ggplot2)
library(LaplacesDemon)
library(truncnorm)
library(gridExtra)
library(Rfast)
ggplotColours <- function(n = 6, h = c(0, 360) + 15){
if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n
hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)
}
number_ticks <- function(n) {function(limits) pretty(limits, n)}
# 97 country version
Time = 32
N = 97
load("/Users/bomin8319/Desktop/DAME_final_files/UN_full_long.RData")
load("/Users/bomin8319/Desktop/DAME_final_files/UN_full2.RData")
load("/Users/bomin8319/Desktop/DAME_final_files/UN_full3.RData")
load("/Users/bomin8319/Desktop/DAME_final_files/UN_full5.RData")
UN4 = UN5
# not existing countries -> all missing values imputed using model (biased)
avail1 = matrix(1, Time, N)
colnames(avail1) = colnames(UNdatafull$Y)
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] = 0 #North and South Korea did not joined UN voting until 1990
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction
Y[1,1:5,1:5]
setwd('/Users/bomin8319/Desktop/external')
#seconddegree
ggcolors = ggplotColours(3)
datacollapse = matrix(0, nrow = 2*37500, ncol = 3)
observedcollapse = matrix(0, 25, 3)
pp = list()
for (tp in 1:Time) {
diag(Y[tp,,]) = 0
Y[tp, which(avail1[tp, ]==0), ] = 0
Y[tp, , which(avail1[tp, ]==0)] = 0
Y[tp, , ][which(is.na(Y[tp, , ]))] = 0
data = t(sapply(1:1000, function(r){tabulate(round(UN$secondDegree[[tp]][r,]/(N*10000)), 77)}))[,-c(1:44, 70:77)]
colnames(data) =  c(45:69)
datamat = matrix(0, 1000, 25)
colnames(datamat) = c(45:69)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat1 = data.frame(Proportion = c(datamat), secondDegree = factor(c(sapply(c(45:69), function(k){rep(k, 1000)}))), Model = as.factor("DAME"))
data =  t(sapply(1:1000, function(r){tabulate(round(UN4$secondDegree[[tp]][r,]/(N*10000)), 77)}))[,-c(1:44, 70:77)]
colnames(data) =  c(45:69)
datamat = matrix(0, 1000, 25)
colnames(datamat) = c(45:69)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat2 = rbind(datamat1, data.frame(Proportion = c(datamat), secondDegree = factor(c(sapply(c(45:69), function(k){rep(k, 1000)}))), Model = as.factor("ME")))
data =  t(sapply(1:1000, function(r){tabulate(round(UN2$secondDegree[[tp]][r,]/(N*10000)), 77)}))[,-c(1:44, 70:77)]
colnames(data) = c(45:69)
datamat = matrix(0, 1000, 25)
colnames(datamat) = c(45:69)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat3 = rbind(datamat2, data.frame(Proportion = c(datamat), secondDegree = factor(c(sapply(c(45:69), function(k){rep(k, 1000)}))), Model = as.factor("AE")))
data =  t(sapply(1:1000, function(r){tabulate(round(UN3$secondDegree[[tp]][r,]/(N*10000)), 77)}))[,-c(1:44, 70:77)]
colnames(data) =  c(45:69)
datamat = matrix(0, 1000, 25)
colnames(datamat) =c(45:69)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat4 = rbind(datamat3, data.frame(Proportion = c(datamat), secondDegree = factor(c(sapply(c(45:69), function(k){rep(k, 1000)}))), Model = as.factor("NO")))
datamat4 = datamat3
datamat4 = as.data.frame(datamat4)
datamat4$secondDegree = as.factor(as.numeric(as.character(datamat4$secondDegree))*10000)
observedpp = as.numeric(tabulate(round(rowSums(Y[tp,,]%*% Y[tp,,]/(N))), 77) / sum(tabulate(round(rowSums(Y[tp,,] %*% Y[tp,,] /N)), 77)))[-c(1:44, 70:77)]
names(observedpp) = c(45:69)
pvec = rep(0,25)
names(pvec) =c(45:69)
pvec[which(names(pvec) %in% names(observedpp))] = observedpp
observed = data.frame(Proportion = pvec, secondDegree = as.factor(c(45:69)*10000), Model = "DAME")
pp[[tp]] = ggplot(datamat4, aes(x = secondDegree, y = Proportion,fill = Model, color = Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observed, color = "blue", size = 0.2, group = 1)+geom_point(data =observed, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
datacollapse[,1] = datacollapse[,1] + datamat4[,1]
observedcollapse[,1] = observedcollapse[,1] + observed[,1]
}
for (t in 1:Time){
mname = paste0(years[t], "overallseconddegree", ".png")
print(pp[[t]])
ggsave(filename = mname, width = 13, height = 6)
}
head(oberved)
head(observed)
unique(datamat4$s2)
unique(datamat4$secondDegree)
unique(datamat4$observed)
unique(observed$secondDegree)
pp[[1]]
datacollapse = data.frame(Proportion = datacollapse[,1]/Time, secondDegree = as.factor(as.numeric(as.character(datamat3$secondDegree))*10000), Model = datamat3$Model)
observedcollapse = data.frame(Proportion = observedcollapse[,1]/Time, secondDegree = observed$secondDegree, Model = observed$Model)
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
datacollapse$secondDegree =as.factor(paste0(substr(datacollapse$secondDegree, 1, 3), ""))
observedcollapse$secondDegree =as.factor(paste0(substr(observedcollapse$secondDegree, 1, 3), ""))
pp = ggplot(datacollapse, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
#pp = ggplot(datacollapse2, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp
datacollapse = data.frame(Proportion = datacollapse[,1]/Time, Degree = as.factor(as.numeric(as.character(datamat3$Degree))*100), Model = datamat3$Model)
observedcollapse = data.frame(Proportion = observedcollapse[,1]/Time, Degree = observed$Degree, Model = observed$Model)
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
pp = ggplot(datacollapse, aes(x = Degree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
#pp = ggplot(datacollapse2, aes(x = Degree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp
setwd('/Users/bomin8319/Desktop/external')
ggcolors = ggplotColours(3)
datacollapse = matrix(0, nrow = 84000, ncol = 3)
observedcollapse = matrix(0, 28, 3)
pp = list()
for (tp in 1:Time) {
diag(Y[tp,,]) = 0
Y[tp, which(avail1[tp, ]==0), ] = 0
Y[tp, , which(avail1[tp, ]==0)] = 0
Y[tp, , ][which(is.na(Y[tp, , ]))] = 0
data = t(sapply(1:1000, function(r){tabulate(round(UN$Degree[[tp]][r,]/100), 95)}))[,-c(1:59, 88:95)]
colnames(data) =  c(60:87)
datamat = matrix(0, 1000, 28)
colnames(datamat) = c(60:87)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat1 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(60:87), function(k){rep(k, 1000)}))), Model = as.factor("DAME"))
data =  t(sapply(1:1000, function(r){tabulate(round(UN4$Degree[[tp]][r,]/100), 95)}))[,-c(1:59, 88:95)]
colnames(data) =  c(60:87)
datamat = matrix(0, 1000, 28)
colnames(datamat) = c(60:87)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat2 = rbind(datamat1, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(60:87), function(k){rep(k, 1000)}))), Model = as.factor("ME")))
data =  t(sapply(1:1000, function(r){tabulate(round(UN2$Degree[[tp]][r,]/100), 95)}))[,-c(1:59, 88:95)]
colnames(data) =  c(60:87)
datamat = matrix(0, 1000,28)
colnames(datamat) = c(60:87)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat3 = rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(60:87), function(k){rep(k, 1000)}))), Model = as.factor("AE")))
data =  t(sapply(1:1000, function(r){tabulate(round(UN3$Degree[[tp]][r,]/100), 95)}))[,-c(1:59, 88:95)]
colnames(data) =  c(60:87)
datamat = matrix(0, 1000, 28)
colnames(datamat) =c(60:87)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat4 = rbind(datamat3, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(60:87), function(k){rep(k, 1000)}))), Model = as.factor("NO")))
datamat4 = datamat3
datamat4 = as.data.frame(datamat4)
observedpp = as.numeric(tabulate(round(rowSums(Y[tp,,])), 95) / sum(tabulate(round(rowSums(Y[tp,,])), 95)))[-c(1:59, 88:95)]
names(observedpp) = c(60:87)
pvec = rep(0, 28)
names(pvec) =c(60:87)
pvec[which(names(pvec) %in% names(observedpp))] = observedpp
datamat4$Degree = as.factor(as.numeric(as.character(datamat4$Degree))*100)
observed = data.frame(Proportion = pvec, Degree = as.factor(c(60:87)*100), Model = "DAME")
pp[[tp]] = ggplot(datamat4, aes(x = Degree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observed, color = "blue", size = 0.2, group = 1)+geom_point(data =observed, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
datacollapse[,1] = datacollapse[,1] + datamat3[,1]
observedcollapse[,1] = observedcollapse[,1] + observed[,1]
}
datacollapse = data.frame(Proportion = datacollapse[,1]/Time, Degree = as.factor(as.numeric(as.character(datamat3$Degree))*100), Model = datamat3$Model)
observedcollapse = data.frame(Proportion = observedcollapse[,1]/Time, Degree = observed$Degree, Model = observed$Model)
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
pp = ggplot(datacollapse2, aes(x = Degree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp
#seconddegree
ggcolors = ggplotColours(3)
datacollapse = matrix(0, nrow = 2*37500, ncol = 3)
observedcollapse = matrix(0, 25, 3)
pp = list()
for (tp in 1:Time) {
diag(Y[tp,,]) = 0
Y[tp, which(avail1[tp, ]==0), ] = 0
Y[tp, , which(avail1[tp, ]==0)] = 0
Y[tp, , ][which(is.na(Y[tp, , ]))] = 0
data = t(sapply(1:1000, function(r){tabulate(round(UN$secondDegree[[tp]][r,]/(N*10000)), 77)}))[,-c(1:44, 70:77)]
colnames(data) =  c(45:69)
datamat = matrix(0, 1000, 25)
colnames(datamat) = c(45:69)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat1 = data.frame(Proportion = c(datamat), secondDegree = factor(c(sapply(c(45:69), function(k){rep(k, 1000)}))), Model = as.factor("DAME"))
data =  t(sapply(1:1000, function(r){tabulate(round(UN4$secondDegree[[tp]][r,]/(N*10000)), 77)}))[,-c(1:44, 70:77)]
colnames(data) =  c(45:69)
datamat = matrix(0, 1000, 25)
colnames(datamat) = c(45:69)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat2 = rbind(datamat1, data.frame(Proportion = c(datamat), secondDegree = factor(c(sapply(c(45:69), function(k){rep(k, 1000)}))), Model = as.factor("ME")))
data =  t(sapply(1:1000, function(r){tabulate(round(UN2$secondDegree[[tp]][r,]/(N*10000)), 77)}))[,-c(1:44, 70:77)]
colnames(data) = c(45:69)
datamat = matrix(0, 1000, 25)
colnames(datamat) = c(45:69)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat3 = rbind(datamat2, data.frame(Proportion = c(datamat), secondDegree = factor(c(sapply(c(45:69), function(k){rep(k, 1000)}))), Model = as.factor("AE")))
data =  t(sapply(1:1000, function(r){tabulate(round(UN3$secondDegree[[tp]][r,]/(N*10000)), 77)}))[,-c(1:44, 70:77)]
colnames(data) =  c(45:69)
datamat = matrix(0, 1000, 25)
colnames(datamat) =c(45:69)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat4 = rbind(datamat3, data.frame(Proportion = c(datamat), secondDegree = factor(c(sapply(c(45:69), function(k){rep(k, 1000)}))), Model = as.factor("NO")))
datamat4 = datamat3
datamat4 = as.data.frame(datamat4)
datamat4$secondDegree = as.factor(as.numeric(as.character(datamat4$secondDegree))*10000)
observedpp = as.numeric(tabulate(round(rowSums(Y[tp,,]%*% Y[tp,,]/(N))), 77) / sum(tabulate(round(rowSums(Y[tp,,] %*% Y[tp,,] /N)), 77)))[-c(1:44, 70:77)]
names(observedpp) = c(45:69)
pvec = rep(0,25)
names(pvec) =c(45:69)
pvec[which(names(pvec) %in% names(observedpp))] = observedpp
observed = data.frame(Proportion = pvec, secondDegree = as.factor(c(45:69)*10000), Model = "DAME")
datamat4$secondDegree[datamat4$secondDegree=="5"]
pp[[tp]] = ggplot(datamat4, aes(x = secondDegree, y = Proportion,fill = Model, color = Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observed, color = "blue", size = 0.2, group = 1)+geom_point(data =observed, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
datacollapse[,1] = datacollapse[,1] + datamat4[,1]
observedcollapse[,1] = observedcollapse[,1] + observed[,1]
}
datacollapse = data.frame(Proportion = datacollapse[,1]/Time, secondDegree = as.factor(as.numeric(as.character(datamat3$secondDegree))*10000), Model = datamat3$Model)
observedcollapse = data.frame(Proportion = observedcollapse[,1]/Time, secondDegree = observed$secondDegree, Model = observed$Model)
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
datacollapse$secondDegree =as.factor(paste0(substr(datacollapse$secondDegree, 1, 3), ""))
observedcollapse$secondDegree =as.factor(paste0(substr(observedcollapse$secondDegree, 1, 3), ""))
pp = ggplot(datacollapse, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
#pp = ggplot(datacollapse2, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp
pp + labs(x = "secondDegree (thousand)")
pp + labs(x = "secondDegree (in thousand)")
pp = ggplot(datacollapse2, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp + labs(x = "secondDegree (in thousand)")
datacollapse2$secondDegree =as.factor(paste0(substr(datacollapse2$secondDegree, 1, 3), ""))
p = ggplot(datacollapse2, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp + labs(x = "secondDegree (in thousand)")
pp = ggplot(datacollapse2, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp + labs(x = "secondDegree (in thousand)")
pp = ggplot(datacollapse, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp + labs(x = "secondDegree (in thousand)")
ggcolors = ggplotColours(3)
datacollapse = matrix(0, nrow = 2*40500, ncol = 3)
observedcollapse = matrix(0, 27, 3)
pp = list()
for (tp in 1:Time) {
diag(Y[tp,,]) = 0
Y[tp, which(avail1[tp, ]==0), ] = 0
Y[tp, , which(avail1[tp, ]==0)] = 0
Y[tp, , ][which(is.na(Y[tp, , ]))] = 0
data = t(sapply(1:1000, function(r){tabulate(round(UN$thirdDegree[[tp]][r,]/(N*N*1000000)), 66)}))[,-c(1:31, 59:66)]
colnames(data) = c(32:58)
datamat = matrix(0, 1000, 27)
colnames(datamat) = c(32:58)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat1 = data.frame(Proportion = c(datamat), thirdDegree = factor(c(sapply(c(32:58), function(k){rep(k, 1000)}))), Model = as.factor("DAME"))
data =  t(sapply(1:1000, function(r){tabulate(round(UN4$thirdDegree[[tp]][r,]/(N*N*1000000)), 66)}))[,-c(1:31, 59:66)]
colnames(data) =  c(32:58)
datamat = matrix(0, 1000, 27)
colnames(datamat) = c(32:58)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat2 = rbind(datamat1, data.frame(Proportion = c(datamat), thirdDegree = factor(c(sapply(c(32:58), function(k){rep(k, 1000)}))), Model = as.factor("ME")))
data =  t(sapply(1:1000, function(r){tabulate(round(UN2$thirdDegree[[tp]][r,]/(N*N*1000000)), 66)}))[,-c(1:31, 59:66)]
colnames(data) = c(32:58)
datamat = matrix(0, 1000, 27)
colnames(datamat) = c(32:58)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat3 = rbind(datamat2, data.frame(Proportion = c(datamat), thirdDegree = factor(c(sapply(c(32:58), function(k){rep(k, 1000)}))), Model = as.factor("AE")))
data =  t(sapply(1:1000, function(r){tabulate(round(UN3$thirdDegree[[tp]][r,]/(N*N*1000000)), 66)}))[,-c(1:31, 59:66)]
colnames(data) =  c(32:58)
datamat = matrix(0, 1000, 27)
colnames(datamat) =c(32:58)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat4 = rbind(datamat3, data.frame(Proportion = c(datamat), thirdDegree = factor(c(sapply(c(32:58), function(k){rep(k, 1000)}))), Model = as.factor("NO")))
datamat4 = datamat3
datamat4 = as.data.frame(datamat4)
datamat4$thirdDegree = as.factor(as.numeric(as.character(datamat4$thirdDegree))*1000000)
observedpp = as.numeric(tabulate(round(rowSums(Y[tp,,]%*% Y[tp,,]%*% Y[tp,,]/(N*N))), 66) / sum(tabulate(round(rowSums(Y[tp,,] %*% Y[tp,,]%*% Y[tp,,] /(N*N))), 66)))[-c(1:31, 59:66)]
names(observedpp) = c(32:58)
pvec = rep(0, 27)
names(pvec) =c(32:58)
pvec[which(names(pvec) %in% names(observedpp))] = observedpp
observed = data.frame(Proportion = pvec, thirdDegree = as.factor(c(32:58)*1000000), Model = "DAME")
pp[[tp]] = ggplot(datamat4, aes(x = thirdDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observed, color = "blue", size = 0.2, group = 1)+geom_point(data =observed, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
datacollapse[,1] = datacollapse[,1] + datamat4[,1]
observedcollapse[,1] = observedcollapse[,1] + observed[,1]
}
years = c(1983:2014)
for (t in 1:Time){
mname = paste0(years[t], "overallthirddegree", ".png")
print(pp[[t]])
ggsave(filename = mname, width = 15, height = 6)
}
ggcolors = ggplotColours(3)
datacollapse = matrix(0, nrow = 2*40500, ncol = 3)
observedcollapse = matrix(0, 27, 3)
pp = list()
for (tp in 1:Time) {
diag(Y[tp,,]) = 0
Y[tp, which(avail1[tp, ]==0), ] = 0
Y[tp, , which(avail1[tp, ]==0)] = 0
Y[tp, , ][which(is.na(Y[tp, , ]))] = 0
data = t(sapply(1:1000, function(r){tabulate(round(UN$thirdDegree[[tp]][r,]/(N*N*1000000)), 66)}))[,-c(1:31, 59:66)]
colnames(data) = c(32:58)
datamat = matrix(0, 1000, 27)
colnames(datamat) = c(32:58)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat1 = data.frame(Proportion = c(datamat), thirdDegree = factor(c(sapply(c(32:58), function(k){rep(k, 1000)}))), Model = as.factor("DAME"))
data =  t(sapply(1:1000, function(r){tabulate(round(UN4$thirdDegree[[tp]][r,]/(N*N*1000000)), 66)}))[,-c(1:31, 59:66)]
colnames(data) =  c(32:58)
datamat = matrix(0, 1000, 27)
colnames(datamat) = c(32:58)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat2 = rbind(datamat1, data.frame(Proportion = c(datamat), thirdDegree = factor(c(sapply(c(32:58), function(k){rep(k, 1000)}))), Model = as.factor("ME")))
data =  t(sapply(1:1000, function(r){tabulate(round(UN2$thirdDegree[[tp]][r,]/(N*N*1000000)), 66)}))[,-c(1:31, 59:66)]
colnames(data) = c(32:58)
datamat = matrix(0, 1000, 27)
colnames(datamat) = c(32:58)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat3 = rbind(datamat2, data.frame(Proportion = c(datamat), thirdDegree = factor(c(sapply(c(32:58), function(k){rep(k, 1000)}))), Model = as.factor("AE")))
data =  t(sapply(1:1000, function(r){tabulate(round(UN3$thirdDegree[[tp]][r,]/(N*N*1000000)), 66)}))[,-c(1:31, 59:66)]
colnames(data) =  c(32:58)
datamat = matrix(0, 1000, 27)
colnames(datamat) =c(32:58)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat4 = rbind(datamat3, data.frame(Proportion = c(datamat), thirdDegree = factor(c(sapply(c(32:58), function(k){rep(k, 1000)}))), Model = as.factor("NO")))
datamat4 = datamat3
datamat4 = as.data.frame(datamat4)
datamat4$thirdDegree = as.factor(as.numeric(as.character(datamat4$thirdDegree))*1000000)
observedpp = as.numeric(tabulate(round(rowSums(Y[tp,,]%*% Y[tp,,]%*% Y[tp,,]/(N*N))), 66) / sum(tabulate(round(rowSums(Y[tp,,] %*% Y[tp,,]%*% Y[tp,,] /(N*N))), 66)))[-c(1:31, 59:66)]
names(observedpp) = c(32:58)
pvec = rep(0, 27)
names(pvec) =c(32:58)
pvec[which(names(pvec) %in% names(observedpp))] = observedpp
observed = data.frame(Proportion = pvec, thirdDegree = as.factor(c(32:58)*1000000), Model = "DAME")
datamat4$thirdDegree =as.factor(paste0(substr(datamat4$thirdDegree, 1, 3), ""))
observed$thirdDegree =as.factor(paste0(substr(observed$thirdDegree, 1, 3), ""))
pp[[tp]] = ggplot(datamat4, aes(x = thirdDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observed, color = "blue", size = 0.2, group = 1)+geom_point(data =observed, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
datacollapse[,1] = datacollapse[,1] + datamat4[,1]
observedcollapse[,1] = observedcollapse[,1] + observed[,1]
}
years = c(1983:2014)
for (t in 1:Time){
mname = paste0(years[t], "overallthirddegree", ".png")
print(pp[[t]]+labs(x = "secondDegree (in million)"))
ggsave(filename = mname, width = 12, height = 6)
}
years = c(1983:2014)
for (t in 1:Time){
mname = paste0(years[t], "overallthirddegree", ".png")
print(pp[[t]]+labs(x = "thirdDegree (in million)"))
ggsave(filename = mname, width = 11, height = 6)
}
datacollapse = data.frame(Proportion = datacollapse[,1]/Time, thirdDegree =as.factor(as.numeric(as.character(datamat3$thirdDegree))*1000000), Model = datamat3$Model)
observedcollapse = data.frame(Proportion = observedcollapse[,1]/Time, thirdDegree = observed$thirdDegree, Model = observed$Model)
pp = ggplot(datacollapse, aes(x = thirdDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
#pp = ggplot(datacollapse2, aes(x = thirdDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
datacollapse = data.frame(Proportion = datacollapse[,1]/Time, thirdDegree =as.factor(as.numeric(as.character(datamat3$thirdDegree))*1000000), Model = datamat3$Model)
observedcollapse = data.frame(Proportion = observedcollapse[,1]/Time, thirdDegree = observed$thirdDegree, Model = observed$Model)
datacollapse$thirdDegree =as.factor(paste0(substr(datacollapse$thirdDegree, 1, 3), ""))
datacollapse2$thirdDegree =as.factor(paste0(substr(datacollapse2$thirdDegree, 1, 3), ""))
observedcollapse$thirdDegree =as.factor(paste0(substr(observedcollapse$thirdDegree, 1, 3), ""))
pp = ggplot(datacollapse, aes(x = thirdDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
#pp = ggplot(datacollapse2, aes(x = thirdDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp+labs(x = "thirdDegree (in million)")
pp = ggplot(datacollapse2, aes(x = thirdDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp+labs(x = "thirdDegree (in million)")
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
pp = ggplot(datacollapse2, aes(x = thirdDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp+labs(x = "thirdDegree (in million)")
#seconddegree
ggcolors = ggplotColours(3)
datacollapse = matrix(0, nrow = 2*37500, ncol = 3)
observedcollapse = matrix(0, 25, 3)
pp = list()
for (tp in 1:Time) {
diag(Y[tp,,]) = 0
Y[tp, which(avail1[tp, ]==0), ] = 0
Y[tp, , which(avail1[tp, ]==0)] = 0
Y[tp, , ][which(is.na(Y[tp, , ]))] = 0
data = t(sapply(1:1000, function(r){tabulate(round(UN$secondDegree[[tp]][r,]/(N*10000)), 77)}))[,-c(1:44, 70:77)]
colnames(data) =  c(45:69)
datamat = matrix(0, 1000, 25)
colnames(datamat) = c(45:69)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat1 = data.frame(Proportion = c(datamat), secondDegree = factor(c(sapply(c(45:69), function(k){rep(k, 1000)}))), Model = as.factor("DAME"))
data =  t(sapply(1:1000, function(r){tabulate(round(UN4$secondDegree[[tp]][r,]/(N*10000)), 77)}))[,-c(1:44, 70:77)]
colnames(data) =  c(45:69)
datamat = matrix(0, 1000, 25)
colnames(datamat) = c(45:69)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat2 = rbind(datamat1, data.frame(Proportion = c(datamat), secondDegree = factor(c(sapply(c(45:69), function(k){rep(k, 1000)}))), Model = as.factor("ME")))
data =  t(sapply(1:1000, function(r){tabulate(round(UN2$secondDegree[[tp]][r,]/(N*10000)), 77)}))[,-c(1:44, 70:77)]
colnames(data) = c(45:69)
datamat = matrix(0, 1000, 25)
colnames(datamat) = c(45:69)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat3 = rbind(datamat2, data.frame(Proportion = c(datamat), secondDegree = factor(c(sapply(c(45:69), function(k){rep(k, 1000)}))), Model = as.factor("AE")))
data =  t(sapply(1:1000, function(r){tabulate(round(UN3$secondDegree[[tp]][r,]/(N*10000)), 77)}))[,-c(1:44, 70:77)]
colnames(data) =  c(45:69)
datamat = matrix(0, 1000, 25)
colnames(datamat) =c(45:69)
for (i in 1:1000) {
datamat[i, which(colnames(datamat) %in% colnames(data))] = data[i,] / sum(data[i,])
}
datamat4 = rbind(datamat3, data.frame(Proportion = c(datamat), secondDegree = factor(c(sapply(c(45:69), function(k){rep(k, 1000)}))), Model = as.factor("NO")))
datamat4 = datamat3
datamat4 = as.data.frame(datamat4)
datamat4$secondDegree = as.factor(as.numeric(as.character(datamat4$secondDegree))*10000)
observedpp = as.numeric(tabulate(round(rowSums(Y[tp,,]%*% Y[tp,,]/(N))), 77) / sum(tabulate(round(rowSums(Y[tp,,] %*% Y[tp,,] /N)), 77)))[-c(1:44, 70:77)]
names(observedpp) = c(45:69)
pvec = rep(0,25)
names(pvec) =c(45:69)
pvec[which(names(pvec) %in% names(observedpp))] = observedpp
observed = data.frame(Proportion = pvec, secondDegree = as.factor(c(45:69)*10000), Model = "DAME")
datamat4$secondDegree =as.factor(paste0(substr(datamat4$secondDegree, 1, 3), ""))
observed$secondDegree =as.factor(paste0(substr(observed$secondDegree, 1, 3), ""))
pp[[tp]] = ggplot(datamat4, aes(x = secondDegree, y = Proportion,fill = Model, color = Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observed, color = "blue", size = 0.2, group = 1)+geom_point(data =observed, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
datacollapse[,1] = datacollapse[,1] + datamat4[,1]
observedcollapse[,1] = observedcollapse[,1] + observed[,1]
}
for (t in 1:Time){
mname = paste0(years[t], "overallseconddegree", ".png")
print(pp[[t]]+labs(x = "secondDegree (in thousand)"))
ggsave(filename = mname, width = 11, height = 6)
}
datacollapse = data.frame(Proportion = datacollapse[,1]/Time, secondDegree = as.factor(as.numeric(as.character(datamat3$secondDegree))*10000), Model = datamat3$Model)
observedcollapse = data.frame(Proportion = observedcollapse[,1]/Time, secondDegree = observed$secondDegree, Model = observed$Model)
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
datacollapse$secondDegree =as.factor(paste0(substr(datacollapse$secondDegree, 1, 3), ""))
datacollapse2$secondDegree =as.factor(paste0(substr(datacollapse2$secondDegree, 1, 3), ""))
observedcollapse$secondDegree =as.factor(paste0(substr(observedcollapse$secondDegree, 1, 3), ""))
pp = ggplot(datacollapse, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
#pp = ggplot(datacollapse2, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp + labs(x = "secondDegree (in thousand)")
datacollapse = data.frame(Proportion = datacollapse[,1]/Time, secondDegree = as.factor(as.numeric(as.character(datamat3$secondDegree))*10000), Model = datamat3$Model)
observedcollapse = data.frame(Proportion = observedcollapse[,1]/Time, secondDegree = observed$secondDegree, Model = observed$Model)
datacollapse2 = datacollapse[datacollapse$Model == "DAME",]
datacollapse$secondDegree =as.factor(paste0(substr(datacollapse$secondDegree, 1, 3), ""))
datacollapse2$secondDegree =as.factor(paste0(substr(datacollapse2$secondDegree, 1, 3), ""))
observedcollapse$secondDegree =as.factor(paste0(substr(observedcollapse$secondDegree, 1, 3), ""))
pp = ggplot(datacollapse, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
#pp = ggplot(datacollapse2, aes(x = secondDegree, y = Proportion,fill = Model, color =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal()+scale_fill_manual(values = alpha(ggcolors, 0.5)) + geom_line(data = observedcollapse, color = "blue", size = 0.2, group = 1)+geom_point(data =observedcollapse, color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
pp + labs(x = "secondDegree (in thousand)")
pp + labs(x = "secondDegree (in thousand)")
