X[d, a, r, 5] = sendraw(data, r, a)
X[d, a, r, 6] = sum(sapply(c(1:A)[-c(a,r)], function(h) {
sendraw(data, a, h) * sendraw(data, h, r) / 10
}))
X[d, a, r, 7] = sum(sapply(c(1:A)[-c(a,r)], function(h) {
sendraw(data, h, a) * sendraw(data, r, h)
})) / 10
X[d, a, r, 8] = sum(sapply(c(1:A)[-c(a,r)], function(h) {
sendraw(data, h, a) * sendraw(data, h, r)
})) / 10
X[d, a, r, 9] = sum(sapply(c(1:A)[-c(a,r)], function(h) {
sendraw(data, a, h) * sendraw(data, r, h)
}))	/10
}
X[d, a, , 12] = 1* (Montgomery$manager_gender[a]=="Female")
X[d, a, r, 13] =1* (Montgomery$manager_gender[r]=="Female")
X[d, a, r, 14] =1* (Montgomery$manager_gender[a]==Montgomery$manager_gender[r])
}
X[d, a, , 10] = ifelse(outdegree[a] <sum(X[d,a,,4]),sum(X[d,a,,4])/outdegree[a] , 1)
X[d, a, , 11] = X[d, a, , 2] * X[d, a, , 10] / 10
}
}
load("⁨iCloud Drive⁩ ▸ ⁨Desktop⁩ ▸ ⁨DAME_revision⁩")
load("Desktop\\")
load("/Users/bomin8319/Desktop/DAME_revision/UN_full_new.RData")
UN$D
(2029.56-1997.50)
(2029.56-1997.50) * 180
(2029.56-1997.50) * 360
8000/32.06
250/12
11541/(1-0.02)
32/0.02
32/0.03
730640.59 - 73190.16
719101.43 - 72660.21
32*12
384/0.02
657450.4 - 646441.2
730640.59 - 114522.45
719101.43 - 110683.77
616118.1 - 608417.7
11009.2/8000
4.80 * 250
4.80 * 250 + 4.10 * 250
4.80 * 250 + 4.10 * 250 + 3.5 * 100
4.80 * 250 + 4.10 * 250 + 3.5 * 100 + 175
600000/1000
4.80 * 250 + 4.10 * 250 + 3.5 * 100 + 175
3.20 * 250 + 2.90 * 250 + 2.55 * 100
3.20 * 250 + 2.90 * 250 + 2.55 * 101
4.80 * 250 + 4.10 * 250 + 3.5 * 101 + 175
3.20*250+2.90*232
28.69 + 63.33 + 11.95 + 1990 + 425 + 450 + 32 + 11.5 + 19 + 49 + 189.6 + 121.5 + 170 + 4937 + 6018.14
28.69 + 63.33 + 11.95 + 1990 + 425 + 450 + 32 + 11.5 + 19 + 49 + 189.6 + 121.5 + 170 + 4937 + 6018.14 + 245 + 30 + 175 + 1473
28.69 + 63.33 + 11.95 + 1990 + 425 + 450 + 32 + 11.5 + 19 + 49 + 189.6 + 121.5 + 170 + 4937 + 6018.14 + 245 + 30 + 175 + 1473 + 650 + 75 + 125 + 1703
28.69 + 63.33 + 11.95 + 1990 + 425 + 450 + 32 + 11.5 + 19 + 49 + 189.6 + 121.5 + 170 + 4937 + 6018.14 + 245 + 30 + 175 + 1473 + 650 + 75 + 125 + 1793
28.69 + 63.33 + 11.95 + 1990 + 425 + 450 + 32 + 11.5 + 19 + 49 + 189.6 + 121.5 + 170 + 4937 + 6018.14 + 245 + 30 + 175 + 1473 + 650 + 75 + 125 + 1793 + 394.5 + 380 + 35 + 8395.08 + 486
28.69 + 63.33 + 11.95 + 1990 + 425 + 450 + 32 + 11.5 + 19 + 49 + 189.6 + 121.5 + 170 + 4937 + 6018.14 + 245 + 30 + 175 + 1473 + 650 + 75 + 125 + 1793 + 394.5 + 380 + 35 + 8395.08 + 486 - 6495.46 - 250
28.69 + 63.33 + 11.95 + 1990 + 425 + 450 + 32 + 11.5 + 19 + 49 + 189.6 + 121.5 + 170 + 4937 + 6018.14 + 245 + 30 + 175 + 1473 + 650 + 75 + 125 + 1793 + 394.5 + 380 + 35 + 8395.08 + 486 - 6495.46 - 250
28.69 + 63.33 + 11.95 + 1990 + 425 + 450 + 32 + 11.5 + 19 + 49 + 189.6 + 121.5 + 170 + 4937 + 6018.14 + 245 + 30 + 175 + 1473 + 650 + 75 + 125 + 1793 + 394.5 + 380 + 35 + 8395.08 + 486 + 601814
28.69 + 63.33 + 11.95 + 1990 + 425 + 450 + 32 + 11.5 + 19 + 49 + 189.6 + 121.5 + 170 + 4937 + 6018.14 + 245 + 30 + 175 + 1473 + 650 + 75 + 125 + 1793 + 394.5 + 380 + 35 + 8395.08 + 486 + 601814 - 481452
28.69 + 63.33 + 11.95 + 1990 + 425 + 450 + 32 + 11.5 + 19 + 49 + 189.6 + 121.5 + 170 + 4937 + 6018.14 + 245 + 30 + 175 + 1473 + 650 + 75 + 125 + 1793 + 394.5 + 380 + 35 + 8395.08 + 486 + 601814 - 481452 - 6495.46 - 250
28.69 + 63.33 + 11.95 + 1990 + 425 + 450 + 32 + 11.5 + 19 + 49 + 189.6 + 121.5 + 170 + 4937 + 6018.14 + 245 + 30 + 175 + 1473 + 650 + 75 + 125 + 1793 + 394.5 + 380 + 35 + 8395.08 + 486 + 601814 - 481452 - 6495.46 - 250 - 20000
28.69 + 63.33 + 11.95 + 1990 + 425 + 450 + 32 + 11.5 + 19 + 49 + 189.6 + 121.5 + 170 + 4937 + 6018.14 + 245 + 30 + 175 + 1473 + 650 + 75 + 125 + 1793 + 394.5 + 380 + 35 + 8395.08 + 486 + 601814 - 481452 - 6495.46 - 250 - 20000 - 12000
630589.29 - 601814
630587.29 - 601814
630587.29 - 240 - 601814
630587.29 - 250 - 601814
630587.29 +250 - 601814
20686.23 - 12036.28
20686.23 - 12036.28 + 21935.81
WRF550CDHZ02
21935.81 + 120362 -2000
21935.81 + 120362 -20000
21935.81 + 120362 -20000 - 12000
407 + 1009.93 + 9823.59 + 121.5
407 + 1009.93 + 9823.59 + 121.5 + 10573.79
6495.46 + 20000
6495.46 + 20000 + 1504.54 + 12036.28 + 650
601814 + 28.69 + 63.33
11.95 + 1990 + 425 + 11.5 + 49 + 10 + 70 + 200 + 668.07 + 650
20686.28 -12036.28
load("/Users/bomin8319/Desktop/UN_full3_test2.RData")
names(UN3_test2)
summary(mcmc(UN3_test2$s2))
library(MCMCpack)
summary(mcmc(UN3_test2$s2))
summary(mcmc(UN3_test2$BETA[[10]]))
plot(UN3_test2$s2, type = 'l')
summary(mcmc(UN3_test2$tau))
plot(UN3_test2$tau[,1], type = 'l')
plot(UN3_test2$tau[,2], type = 'l')
plot(UN3_test2$tau[,3], type = 'l')
plot(UN3_test2$tau[,4], type = 'l')
plot(UN3_test2$tau[,5], type = 'l')
plot(UN3_test2$tau[,6], type = 'l')
summary(mcmc(UN3_test2$kappas))
summary(mcmc(UN3_test2$kappas))[[2]][,3]
round(summary(mcmc(UN3_test2$kappas))[[2]][,3],4)
plot(UN3_test2$kappas[,1], type = 'l')
plot(UN3_test2$kappas[,2], type = 'l')
plot(UN3_test2$kappas[,3], type = 'l')
plot(UN3_test2$kappas[,4], type = 'l')
plot(UN3_test2$kappas[,5], type = 'l')
plot(UN3_test2$kappas[,6], type = 'l')
plot(UN3_test2$kappas[-c(1:500),6], type = 'l')
plot(UN3_test2$kappas[-c(1:600),6], type = 'l')
plot(UN3_test2$kappas[-c(1:700),6], type = 'l')
plot(UN3_test2$kappas[-c(1:800),6], type = 'l')
plot(UN3_test2$kappas[-c(1:900),6], type = 'l')
load('~/Desktop/DAME_revised/UNdatafull.RData')
attach(UNdatafull)
dim(UNdatafull$X)
dimnames(UNdatafull$X)
s2 = 250.0
X_scale = list()
for (p in 1:6) {
XX = sapply(1:Time, function(tp) sum(X[tp, , , p][uppertri]^2, na.rm = TRUE))
X_scale[[p]] = diag(XX, Time, Time)/s2
}
lapply(X_scale, function(x) max(diag(x)))
#lapply(X_scale, function(x) median(diag(x)))
for (p in 1:6) {
print(summary(1/rgamma(10^4, shape = 2, rate = (max(diag(X_scale[[p]]))))))
}
Time = 32
dist_ij = c()
for (i in 1:Time) {
for (j in 1:Time) {
dist_ij = c(dist_ij, abs(i-j))
}
}
dist_ij = matrix(dist_ij, Time, Time)
uppertri = upper.tri(diag(97))
#Y
s2 = 0.0250
X_scale = list()
for (p in 1:6) {
XX = sapply(1:Time, function(tp) sum(X[tp, , , p][uppertri]^2, na.rm = TRUE))
X_scale[[p]] = diag(XX, Time, Time)/s2
}
lapply(X_scale, function(x) max(diag(x)))
#lapply(X_scale, function(x) median(diag(x)))
#(k, theta) search based on Wasserman (2000)
#2. Richardson and Green (1997)
for (p in 1:6) {
print(summary(1/rgamma(10^4, shape = 2, rate = (max(diag(X_scale[[p]]))))))
}
plot(1/rgamma(10^4, shape = 2, rate = (max(diag(X_scale[[p]]))))
)
hist(1/rgamma(10^4, shape = 2, rate = (max(diag(X_scale[[p]]))))
)
load("/Users/bomin8319/Desktop/UN_full3_test2.RData")
load("/Users/bomin8319/Desktop/UN_full3_new.RData")
names(UN3_new)
head(UN3_new$corr)
colMeans(UN3_new$corr)
colMeans(UN3_test2$corr)
load('~/Desktop/DAME_revised/UNdatafull.RData')
attach(UNdatafull)
dim(UNdatafull$X)
dimnames(UNdatafull$X)
#notes on prior search for tau_beta's
rm(list=ls())
load('~/Desktop/DAME_revised/UNdatafull.RData')
attach(UNdatafull)
dim(UNdatafull$X)
dimnames(UNdatafull$X)
library(FastGP)
library(mvtnorm)
library(fields)
library(reshape)
library(MCMCpack)
library(expm)
library(igraph)
library(coda)
library(ggplot2)
library(LaplacesDemon)
library(truncnorm)
library(gridExtra)
library(Rfast)
#construct GP
Time = 32
dist_ij = c()
for (i in 1:Time) {
for (j in 1:Time) {
dist_ij = c(dist_ij, abs(i-j))
}
}
dist_ij = matrix(dist_ij, Time, Time)
uppertri = upper.tri(diag(97))
s2 = 0.0250
X_scale = list()
for (p in 1:6) {
XX = sapply(1:Time, function(tp) sum(X[tp, , , p][uppertri]^2, na.rm = TRUE))
X_scale[[p]] = diag(XX, Time, Time)/s2
}
lapply(X_scale, function(x) max(diag(x)))
s2 = 0.0250
X_scale = list()
for (p in 1:6) {
XX = sapply(1:Time, function(tp) sum(X[tp, , , p][uppertri]^2, na.rm = TRUE))
X_scale[[p]] = s2* solve(diag(XX, Time, Time))
}
lapply(X_scale, function(x) max(diag(x)))
for (p in 1:6) {
print(summary(1/rgamma(10^4, shape = 2, rate = (max(diag(X_scale[[p]]))))))
}
#Y*100
s2 = 250.0
X_scale = list()
for (p in 1:6) {
XX = sapply(1:Time, function(tp) sum(X[tp, , , p][uppertri]^2, na.rm = TRUE))
#X_scale[[p]] = diag(XX, Time, Time)/s2
X_scale[[p]] = s2* solve(diag(XX, Time, Time))
}
lapply(X_scale, function(x) max(diag(x)))
#lapply(X_scale, function(x) median(diag(x)))
for (p in 1:6) {
print(summary(1/rgamma(10^4, shape = 2, rate = (max(diag(X_scale[[p]]))))))
}
sum(uppertri)
97*96/2
s2 = 0.0250
X_scale = list()
for (p in 1:6) {
XX = sapply(1:Time, function(tp) sum(X[tp, , , p][uppertri]^2, na.rm = TRUE))
#X_scale[[p]] = diag(XX, Time, Time)/s2
X_scale[[p]] = s2* solve(diag(XX, Time, Time))
}
lapply(X_scale, function(x) max(diag(x)))
#lapply(X_scale, function(x) median(diag(x)))
#(k, theta) search based on Wasserman (2000)
#2. Richardson and Green (1997)
for (p in 1:6) {
print(summary(1/rgamma(10^4, shape = 2, rate = sum(uppertri)*(max(diag(X_scale[[p]]))))))
}
lapply(X_scale, function(x) sum(uppertri)*max(diag(x)))
#2. Richardson and Green (1997)
for (p in 1:6) {
print(summary(1/rgamma(10^4, shape = 2, rate = sum(uppertri)*(max(diag(X_scale[[p]]))))))
}
#Y*100
s2 = 250.0
X_scale = list()
for (p in 1:6) {
XX = sapply(1:Time, function(tp) sum(X[tp, , , p][uppertri]^2, na.rm = TRUE))
#X_scale[[p]] = diag(XX, Time, Time)/s2
X_scale[[p]] = s2* solve(diag(XX, Time, Time))
}
lapply(X_scale, function(x) sum(uppertri)*max(diag(x)))
#lapply(X_scale
for (p in 1:6) {
print(summary(1/rgamma(10^4, shape = 2, rate = sum(uppertri)*(max(diag(X_scale[[p]]))))))
}
0.053 * 4625
sum(uppertri)
0.053 * 4656
0.05369 * 4656
for (p in 1:6) {
print(summary(1/rgamma(10^4, shape = 2, rate = sum(uppertri)*(max(diag(X_scale[[p]]))))))
}
#Y*100
s2 = 250.0
X_scale = list()
for (p in 1:6) {
XX = sapply(1:Time, function(tp) sum(X[tp, , , p][uppertri]^2, na.rm = TRUE))
#X_scale[[p]] = diag(XX, Time, Time)/s2
X_scale[[p]] = s2* solve(diag(XX, Time, Time))
}
lapply(X_scale, function(x) sum(uppertri)*max(diag(x)))
#lapply(X_scale, function(x) median(diag(x)))
for (p in 1:6) {
print(summary(1/rgamma(10^4, shape = 2, rate = sum(uppertri)*(max(diag(X_scale[[p]]))))))
}
source('~/Desktop/DAME_revised/DAME_pkg_revised/R/DAME.R', chdir = TRUE)
DAME_MH_revised()
DAME_MH_revised
Time = 32
N = 97
avail1 = matrix(1, Time, N)
colnames(avail1) = colnames(UNdatafull$Y)
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] = 0 #North and South Korea did not joined UN voting until 1990
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction
###rerun
UN3_test = DAME_MH_revised(Y[1:Time,,], X[1:Time,,,1:6], RE = c(), R = 2, gammapriors = c(2, 1, 0.025), avail = avail1, burn = 20000, nscan = 50000, odens = 50)
Time = 32
N = 97
avail1 = matrix(1, Time, N)
colnames(avail1) = colnames(UNdatafull$Y)
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] = 0 #North and South Korea did not joined UN voting until 1990
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction
###rerun
UN3_test = DAME_MH_revised(Y[1:Time,,], X[1:Time,,,1:6], RE = c(), R = 2, gammapriors = c(2, 1, 0.025), avail = avail1, burn = 4000, nscan = 10000, odens = 10)
UN3_test2 = DAME_MH_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c(), R = 2, gammapriors = c(2, 1, 250), avail = avail1, burn = 4000, nscan =10000, odens = 10)
library(MCMCpack)
summary(mcmc(UN3_test$kappas))
summary(mcmc(UN3_test$kappas))[[2]][,3]
round(summary(mcmc(UN3_test$kappas))[[2]][,3],4)
round(summary(mcmc(UN3_test$tau))[[2]][,3],4)
summary(mcmc(UN3_test$BETA[[10]]))
summary(mcmc(UN3_test$s2))
summary(mcmc(UN3_test2$s2))
summary(mcmc(UN3_test2$BETA[[10]]))
round(summary(mcmc(UN3_test2$tau))[[2]][,3],4)
round(summary(mcmc(UN3_test2$kappas))[[2]][,3],4)
save(UN3_test, file = "/Users/bomin8319/Desktop/UN_full3_test.RData")
save(UN3_test2, file = "/Users/bomin8319/Desktop/UN_full3_test2.RData")
UN_newprior = DAME_MH_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, gammapriors = c(2, 1, 250), avail = avail1, burn = 50000, nscan = 100000, odens = 50)
source('~/Desktop/DAME_revised/DAME_pkg_revised/R/DAME.R', chdir = TRUE)
DAME_MH_revised
UN3_test = DAME_MH_revised(Y[1:Time,,], X[1:Time,,,1:6], RE = c(), R = 2, gammapriors = c(2, 1, 0.025), avail = avail1, burn = 4000, nscan = 10000, odens = 10)
UN3_test2 = DAME_MH_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c(), R = 2, gammapriors = c(2, 1, 250), avail = avail1, burn = 4000, nscan = 10000, odens = 10)
round(summary(mcmc(UN3_test2$kappas))[[2]][,3],4)
round(summary(mcmc(UN3_test$kappas))[[2]][,3],4)
round(summary(mcmc(UN3_test2$tau))[[2]][,3],4)
round(summary(mcmc(UN3_test$tau))[[2]][,3],4)
summary(mcmc(UN3_test2$BETA[[10]]))
summary(mcmc(UN3_test$BETA[[10]]))
DAME_MH_revised
set.seed(1)
UN_newprior = DAME_MH_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, gammapriors = c(2, 1, 250), avail = avail1, burn = 50000, nscan = 100000, odens = 50)
save(UN, file = "/Users/bomin8319/Desktop/UN_full_long_newprior.RData")
save(UN_newprior, file = "/Users/bomin8319/Desktop/UN_full_long_newprior.RData")
library(FastGP)
library(mvtnorm)
library(fields)
library(reshape)
library(MCMCpack)
library(expm)
library(igraph)
library(coda)
library(ggplot2)
library(LaplacesDemon)
library(truncnorm)
library(gridExtra)
library(Rfast)
#construct GP
Time = 32
dist_ij = c()
for (i in 1:Time) {
for (j in 1:Time) {
dist_ij = c(dist_ij, abs(i-j))
}
}
dist_ij = matrix(dist_ij, Time, Time)
uppertri = upper.tri(diag(97))
matrix(Exponential(dist_ij, kappas[p]), Time, Time, byrow = TRUE))
matrix(Exponential(dist_ij, kappas[p]), Time, Time, byrow = TRUE)
matrix(Exponential(dist_ij, 1), Time, Time, byrow = TRUE)
matrix(Exponential(dist_ij, 2.7974), Time, Time, byrow = TRUE)
matrix(Exponential(dist_ij, 2.7974), Time, Time, byrow = TRUE)[1,]
matrix(Exponential(dist_ij, 2.7974), Time, Time, byrow = TRUE)[1,1:10]
matrix(Exponential(dist_ij, 3.3988), Time, Time, byrow = TRUE)[1,1:10]
matrix(Exponential(dist_ij, 3.9888), Time, Time, byrow = TRUE)[1,1:10]
matrix(Exponential(dist_ij, 10), Time, Time, byrow = TRUE)[1,1:10]
matrix(Exponential(dist_ij, 10), Time, Time, byrow = TRUE)[1,]
matrix(Exponential(dist_ij, 8), Time, Time, byrow = TRUE)[1,]
matrix(Exponential(dist_ij, 9), Time, Time, byrow = TRUE)[1,]
source('~/Desktop/DAME.R', chdir = TRUE)
load("/Users/bomin8319/Desktop/DAME_revision/DAME_code_revised/UNdatafull.RData")
load("/Users/bomin8319/Desktop/DAME_revised/UNdatafull.RData")
attach(UNdatafull)
library(FastGP)
library(mvtnorm)
library(fields)
library(reshape)
library(MCMCpack)
library(expm)
library(igraph)
library(coda)
library(ggplot2)
library(LaplacesDemon)
library(truncnorm)
library(gridExtra)
library(Rfast)
ggplotColours <- function(n = 6, h = c(0, 360) + 15){
if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n
hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)
}
number_ticks <- function(n) {function(limits) pretty(limits, n)}
# 97 country version
Time = 32
N = 97
# not existing countries -> all missing values imputed using model (biased)
avail1 = matrix(1, Time, N)
colnames(avail1) = colnames(UNdatafull$Y)
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] = 0 #North and South Korea did not joined UN voting until 1990
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction
Degrees = vapply(1:Time, function(tp) {rowSums(Y[tp,,], na.rm = TRUE)}, rep(0, N))
corr = vapply(1:31, function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)
#Degrees_nofixed = vapply(1:Time, function(tp) {rowSums(E[[tp]], na.rm = TRUE)}, rep(0, N))
DAME_MH_revised
UN = DAME_MH_revised(Y[1:Time,,]*100, X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn = 50000, nscan = 100000, odens = 50)
save(UN, file = "/Users/bomin8319/Desktop/UN_full_long_var0.25.RData")
plot(UN$s2, type = 'l')
plot(UN$tau[,1], type = 'l')
plot(UN$tau[,6], type = 'l')
plot(UN$tau[,7], type = 'l')
plot(UN$tau[,8], type = 'l')
plot(UN$tau[,9], type = 'l')
plot(UN$kappas[,9], type = 'l')
plot(UN$kappas[,8], type = 'l')
plot(UN$kappas[,7], type = 'l')
#########summary of results#######
load("/Users/bomin8319/Desktop/DAME_revised/UNdatafull.RData")
attach(UNdatafull)
library(FastGP)
library(mvtnorm)
library(fields)
library(reshape)
library(MCMCpack)
library(expm)
library(igraph)
library(coda)
library(ggplot2)
library(LaplacesDemon)
library(truncnorm)
library(gridExtra)
library(Rfast)
ggplotColours <- function(n = 6, h = c(0, 360) + 15){
if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n
hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)
}
number_ticks <- function(n) {function(limits) pretty(limits, n)}
# 97 country version
Time = 32
N = 97
load("/Users/bomin8319/Desktop/DAME_final_files/UN_full_long.RData")
load("/Users/bomin8319/Desktop/DAME_final_files/UN_full2.RData")
load("/Users/bomin8319/Desktop/DAME_final_files/UN_full3.RData")
load("/Users/bomin8319/Desktop/DAME_final_files/UN_full5.RData")
UN4 = UN5
# not existing countries -> all missing values imputed using model (biased)
avail1 = matrix(1, Time, N)
colnames(avail1) = colnames(UNdatafull$Y)
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] = 0 #North and South Korea did not joined UN voting until 1990
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction
## side by side plot
hi = factor(1983:2014)
hello = list()
hello2 = list()
hello3 = list()
hello4 = list()
hellonew = list()
mean = list()
n2 = 1
for	(n in 1:N){
print(n)
hello[[n]] = matrix(NA, nrow = 0, ncol = 3)
mean[[n]] = matrix(NA, nrow = 0, ncol = 3)
for (d in 1:Time){
diag(Y[d,, ])= 0
Y[d, which(avail1[d,]==0), ] = 0
Y[d, , which(avail1[d,]==0)] = 0
Y[d, , ][which(is.na(Y[d, , ]))] = 0
Y[d,,] = Y[d,,] * 100
hello[[n]]  = rbind(hello[[n]], cbind(UN$Degree[[d]][,n2], rep(hi[d], length(UN$Degree[[d]][,n2])), rep("DAME", length(UN$Degree[[d]][,n2]))))
mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,], na.rm=TRUE)[n2], hi[d], "DAME"))
}
colnames(hello[[n]]) = c("Degree", "Year", "Model")
hello[[n]] = as.data.frame(hello[[n]])
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))
hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)
for (d in 1:Time){
hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$Degree[[d]][,n2], rep(hi[d], length(UN2$Degree[[d]][,n2])), rep("AE", length(UN2$Degree[[d]][,n2]))))
}
colnames(hello2[[n]]) = c("Degree", "Year", "Model")
hello2[[n]] = as.data.frame(hello2[[n]])
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)
for (d in 1:Time){
hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$Degree[[d]][,n2], rep(hi[d], length(UN3$Degree[[d]][,n2])), rep("NO", length(UN3$Degree[[d]][,n2]))))
}
colnames(hello3[[n]]) = c("Degree", "Year", "Model")
hello3[[n]] = as.data.frame(hello3[[n]])
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)
for (d in 1:Time){
hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$Degree[[d]][,n2], rep(hi[d], length(UN4$Degree[[d]][,n2])), rep("ME", length(UN4$Degree[[d]][,n2]))))
}
colnames(hello4[[n]]) = c("Degree", "Year", "Model")
hello4[[n]] = as.data.frame(hello4[[n]])
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))
colnames(mean[[n]]) =  c("Degree", "Year", "Model")
mean[[n]] = as.data.frame(mean[[n]])
n2 = n2 + 1
}
countryname = (rownames(UN$U[[Time]]))
countryname2 = (rownames(UN$U[[Time]]))
######degree statistics
setwd('/Users/bomin8319/Desktop/model_validation_new')
countrynames = ggplotColours(4)
p10 = list()
n2 = 1
for (n in 1:N){
hellonew[[n]]$Degree = as.numeric(as.character(hellonew[[n]]$Degree))
mean[[n]]$Degree = as.numeric(as.character(mean[[n]]$Degree))
mean[[n]]$Year = hi
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = Degree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])
n2 = n2 + 1
mname = paste0(countryname2[n], n, ".png")
print(p10[[n]])
ggsave(filename = mname, width = 12, height = 6)
}
